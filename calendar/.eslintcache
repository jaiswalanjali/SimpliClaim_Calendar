[{"C:\\react\\SimpliClaim_Calendar\\calendar\\src\\Components\\Header\\Header.js":"1","C:\\react\\SimpliClaim_Calendar\\calendar\\src\\Components\\Header\\NameOfTheday.js":"2","C:\\react\\SimpliClaim_Calendar\\calendar\\src\\Components\\Header\\MonthComponent.js":"3","C:\\react\\SimpliClaim_Calendar\\calendar\\src\\App.js":"4","C:\\react\\SimpliClaim_Calendar\\calendar\\src\\index.js":"5","C:\\react\\SimpliClaim_Calendar\\calendar\\src\\Components\\Grid.js":"6","C:\\react\\SimpliClaim_Calendar\\calendar\\src\\Components\\Header\\StylesUtils.js":"7","C:\\react\\SimpliClaim_Calendar\\calendar\\src\\Components\\Columns.js":"8"},{"size":478,"mtime":1606644419385,"results":"9","hashOfConfig":"10"},{"size":467,"mtime":1606683295450,"results":"11","hashOfConfig":"10"},{"size":444,"mtime":1606643692836,"results":"12","hashOfConfig":"10"},{"size":1946,"mtime":1606686670980,"results":"13","hashOfConfig":"10"},{"size":517,"mtime":1606395192962,"results":"14","hashOfConfig":"10"},{"size":3057,"mtime":1606687923609,"results":"15","hashOfConfig":"10"},{"size":2038,"mtime":1606688212752,"results":"16","hashOfConfig":"10"},{"size":718,"mtime":1606679542126,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1l09v63",{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\react\\SimpliClaim_Calendar\\calendar\\src\\Components\\Header\\Header.js",[],"C:\\react\\SimpliClaim_Calendar\\calendar\\src\\Components\\Header\\NameOfTheday.js",[],"C:\\react\\SimpliClaim_Calendar\\calendar\\src\\Components\\Header\\MonthComponent.js",["37"],"import React, { useState } from 'react';\r\n\r\nimport '../../App.css';\r\nimport { Button } from '@material-ui/core';\r\nimport { ArrowLeft, ArrowRight } from '@material-ui/icons';\r\n\r\nexport default function MonthComponent(props) {\r\n \r\n    return (\r\n        <Button startIcon={<ArrowLeft onClick={props.onClickLeft}/>} endIcon={<ArrowRight onClick={props.onClickRight}/>} color=\"primary\">\r\n           {props.currentMonth}\r\n        </Button>\r\n    );\r\n}","C:\\react\\SimpliClaim_Calendar\\calendar\\src\\App.js",[],"C:\\react\\SimpliClaim_Calendar\\calendar\\src\\index.js",[],["38","39"],"C:\\react\\SimpliClaim_Calendar\\calendar\\src\\Components\\Grid.js",["40","41","42"],"import React, { useState } from 'react';\r\n\r\nimport { Table, TableBody, TableCell, TableRow} from '@material-ui/core';\r\nimport { useStyles } from './Header/StylesUtils';\r\nimport Columns from './Columns';\r\n\r\n\r\nfunction TableCellWithSlider(props) {\r\n   const styles = useStyles();\r\n   const col = props.col;\r\n   const row = props.row;\r\n   const date = props.date;\r\n   const fulldateString = props.fulldateString;\r\n   console.log(fulldateString.split(' ')[1].split(','));\r\n   const monthString =  (fulldateString.split(' ')[2]===\"01\"?fulldateString.split(' ')[1].split(',')[0]: '');\r\n   const show = props.show;\r\n return (<TableCell  key={date} onClick={props.onClick} size=\"small\" className={props.className}>\r\n   { show && <span className={styles.slider}/>}\r\n<div className={styles.dateText} key={date}>{fulldateString.split(' ')[2]}</div>\r\n{monthString && <div className={styles.monthString}>{monthString}</div>}\r\n </TableCell>);\r\n \r\n}\r\n\r\nexport default function Grid (props) {\r\n      const styles = useStyles();\r\n      const [currDate, setCurrentDate]  = useState(props.currentDate);\r\n      const [dateforSlider, setNewDate] = useState(props.currentDate);\r\n \r\n      const rows = [0, 1, 2, 3, 4, 5];\r\n      const cols = [0, 1, 2, 3, 4, 5, 6];\r\n      let columns = [];\r\n \r\n      let day = 0;\r\n         \r\n \r\n      const [showSliderRow, setShowSliderRow ] = useState(0);\r\n      const [showSliderCol, setShowSliderCol] = useState(0);\r\n    \r\n      function onCellClick(row, col, newDate) {\r\n         setShowSliderRow(row);\r\n         setShowSliderCol(col);\r\n         setNewDate(newDate);\r\n      }\r\n\r\n      React.useEffect (() => {\r\n         console.log(props.currentDate)\r\n         setShowSliderRow(0);\r\n         setShowSliderCol(0);\r\n         setNewDate(props.currentDate);\r\n         setCurrentDate(props.currentDate);\r\n         }, [props.currentDate]);\r\n      \r\n\r\n        return (\r\n        <Table > \r\n            <TableBody>\r\n               <Columns />\r\n               {\r\n                  rows.map(row => {\r\n                  return (<TableRow key={row} style={{ float:\"left\"}}>\r\n                        {cols.map((col) => {\r\n                  const newDate = new Date(currDate.getTime() + day*864e5)\r\n                  const fulldateString = newDate.toLocaleString('en-us', {day:'2-digit', month:\"long\", weekday:\"long\"});\r\n                  day = day +1;\r\n                  const show = showSliderRow === row && showSliderCol === col && newDate.toLocaleString('en-us', {day:'2-digit', month:\"long\", weekday:\"long\"})===dateforSlider.toLocaleString('en-us', {day:'2-digit', month:\"long\", weekday:\"long\"});\r\n                  const className = day%2 === 0? styles.blackCell: styles.greyCell;\r\n                  return <TableCellWithSlider key={newDate} onClick={(event) => {onCellClick(row, col, newDate)}} show={show} col={col} row={row} date={newDate} fulldateString={fulldateString} className={className}/>\r\n                  })}\r\n                  </TableRow>)\r\n                  })\r\n               }\r\n            </TableBody>\r\n        </Table>\r\n    );\r\n    }","C:\\react\\SimpliClaim_Calendar\\calendar\\src\\Components\\Header\\StylesUtils.js",["43"],"C:\\react\\SimpliClaim_Calendar\\calendar\\src\\Components\\Columns.js",[],{"ruleId":"44","severity":1,"message":"45","line":1,"column":17,"nodeType":"46","messageId":"47","endLine":1,"endColumn":25},{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","replacedBy":"51"},{"ruleId":"44","severity":1,"message":"52","line":10,"column":10,"nodeType":"46","messageId":"47","endLine":10,"endColumn":13},{"ruleId":"44","severity":1,"message":"53","line":11,"column":10,"nodeType":"46","messageId":"47","endLine":11,"endColumn":13},{"ruleId":"44","severity":1,"message":"54","line":32,"column":11,"nodeType":"46","messageId":"47","endLine":32,"endColumn":18},{"ruleId":"44","severity":1,"message":"55","line":1,"column":8,"nodeType":"46","messageId":"47","endLine":1,"endColumn":13},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","no-native-reassign",["56"],"no-negated-in-lhs",["57"],"'col' is assigned a value but never used.","'row' is assigned a value but never used.","'columns' is assigned a value but never used.","'React' is defined but never used.","no-global-assign","no-unsafe-negation"]